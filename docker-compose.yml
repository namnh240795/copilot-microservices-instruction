version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres_root_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - microservices_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./services
      dockerfile: apps/backend/Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://backenduser:backendpassword@postgres:5432/backenddb
      NODE_ENV: production
    networks:
      - microservices_network

  oauth2:
    build:
      context: ./services
      dockerfile: apps/oauth2/Dockerfile
    container_name: oauth2
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://oauthuser:oauthpassword@postgres:5432/oauthdb
      NODE_ENV: production
    networks:
      - microservices_network

networks:
  microservices_network:
    driver: bridge

volumes:
  postgres_data: